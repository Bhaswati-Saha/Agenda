{"version":3,"sources":["Component/ListItems.js","Component/SearchBox.js","Component/Todo.js","Component/Signup.js","Component/Signin.js","Component/ResetPassword.js","Component/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["List","items1","deleteItem","setUpdate","listItems","map","item","className","key","type","id","value","text","onChange","e","target","icon","onClick","duration","easing","search","searchfield","searchChange","placeholder","library","add","faTrash","Todo","props","handleInput","setState","currentItem","Date","now","addItem","preventDefault","newItem","state","fetch","method","headers","body","JSON","stringify","userId","todo","then","res","json","todoId","newItems","items","catch","err","console","log","filteredItems","filter","onSearchChange","this","todolist","toLowerCase","includes","onSubmit","required","SearchBox","React","Component","signup","handleEmail","signUpEmail","handlePassword","signUpPassword","onSubmitSignUp","username","password","loadUser","onRouteChange","name","style","margin","signin","signInEmail","signInPassword","onSubmitSignIn","alert","color","resetPassword","email","passwordReset","onSubmitReset","message","Navigation","isSignedIn","display","justifyContent","App","user_id","user","route","Signin","Signup","ResetPassword","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d189174e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\nconst List=({items1,deleteItem,setUpdate})=>{\r\n\tconst listItems=items1.map(item=>\r\n\t{\r\n\t\treturn <div className=\"list\" key={item.key}>\r\n\t\t  <p>\r\n\t\t    <input type=\"text\" id={item.key} value={item.text} onChange={(e) => setUpdate(e.target.value,item.key)}/>\r\n\t\t    <span>\r\n\t\t      <FontAwesomeIcon className=\"faicons\" icon=\"trash\" onClick={() => deleteItem(item.key)}/>\r\n\t\t    </span>\r\n\t\t  </p>\r\n\t\t</div>\r\n    });\r\n\treturn (\r\n\t <div>\r\n\t   <FlipMove duration={300} easing=\"ease-in-out\">\r\n\t     {listItems}\r\n\t   </FlipMove>\r\n\t </div>\r\n\t)};\r\nexport default List;","import React from 'react';\r\nconst search=({searchfield,searchChange})=>{\r\n\treturn( \r\n\t\t<div className=\"ph5\">\r\n\t\t<input type=\"search\" placeholder=\"Search Items\" onChange={searchChange} />\r\n\t\t</div>\r\n\t\t);\r\n};\r\nexport default search;","import React from \"react\";\r\nimport \"./Todo.css\";\r\nimport ListItems from \"./ListItems.js\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SearchBox from \"./SearchBox.js\";\r\nlibrary.add(faTrash);\r\n\r\nclass Todo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            currentItem: {\r\n                text: \"\",\r\n                key: \"\",\r\n            },\r\n            searchfield: \"\",\r\n        };\r\n    }\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            currentItem: {\r\n                text: e.target.value,\r\n                key: Date.now(),\r\n            },\r\n        });\r\n    };\r\n    addItem = (e) => {\r\n        e.preventDefault();\r\n        let newItem = this.state.currentItem;\r\n\r\n        if (newItem.text !== \"\") {\r\n            fetch(\"https://todoapp1000.herokuapp.com/todo/\", {\r\n                method: \"post\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    userId: this.props.id,\r\n                    todo: newItem.text,\r\n                }),\r\n            })\r\n                .then((res) => res.json())\r\n                .then((res) => {\r\n                    newItem.key = res.todoId;\r\n                    const newItems = [...this.state.items, newItem];\r\n                    this.setState({\r\n                        items: newItems,\r\n                        currentItem: {\r\n                            text: \"\",\r\n                            key: \"\",\r\n                        },\r\n                    });\r\n                })\r\n                .catch((err) => console.log(err));\r\n        }\r\n    };\r\n\r\n    deleteItem = (key) => {\r\n        const filteredItems = this.state.items.filter(\r\n            (item) => item.key !== key\r\n        );\r\n        this.setState({\r\n            items: filteredItems,\r\n        });\r\n\r\n        fetch(\"https://todoapp1000.herokuapp.com/todo/\", {\r\n            method: \"delete\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                userId: this.props.id,\r\n                todoId: key,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .catch((err) => console.log(err));\r\n    };\r\n    setUpdate = (text, key) => {\r\n        const { items } = this.state;\r\n        items.map((item) => {\r\n            if (item.key === key) item.text = text;\r\n            return item;\r\n        });\r\n        this.setState({ items: items });\r\n\r\n        fetch(\"https://todoapp1000.herokuapp.com/todo/\", {\r\n            method: \"put\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                userId: this.props.id,\r\n                todoId: key,\r\n                todo: text,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .catch((err) => console.log(err));\r\n    };\r\n    onSearchChange = (e) => {\r\n        this.setState({ searchfield: e.target.value });\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(`https://todoapp1000.herokuapp.com/todo/${this.props.id}`)\r\n            .then((res) => res.json())\r\n            .then((todolist) => this.setState({ items: todolist }));\r\n    }\r\n    render() {\r\n        const { items, searchfield } = this.state;\r\n        const filteredItems = items.filter((item) => {\r\n            return item.text.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n\r\n        return (\r\n            <div className=\"Todo\">\r\n                <header>\r\n                    <h1>Your Agenda</h1>\r\n                    <form id=\"to-do-list\" onSubmit={this.addItem}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter text\"\r\n                            required\r\n                            value={this.state.currentItem.text}\r\n                            onChange={this.handleInput}\r\n                        />\r\n                        <button type=\"submit\">Add</button>\r\n                        <SearchBox searchChange={this.onSearchChange} />\r\n                    </form>\r\n                </header>\r\n                <ListItems\r\n                    items1={filteredItems}\r\n                    deleteItem={this.deleteItem}\r\n                    setUpdate={this.setUpdate}\r\n                ></ListItems>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport \"./Todo.css\";\r\nclass signup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signUpEmail: \"\",\r\n            signUpPassword: \"\",\r\n        };\r\n    }\r\n    handleEmail = (e) => {\r\n        this.setState({ signUpEmail: e.target.value });\r\n    };\r\n    handlePassword = (e) => {\r\n        this.setState({ signUpPassword: e.target.value });\r\n    };\r\n    onSubmitSignUp = (e) => {\r\n        e.preventDefault();\r\n        fetch(\"https://todoapp1000.herokuapp.com/signup\", {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                username: this.state.signUpEmail,\r\n                password: this.state.signUpPassword,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((res) => {\r\n                this.props.loadUser(res.id);\r\n                this.props.onRouteChange(\"home\");\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <div className=\"Todo\">\r\n                <h1>Agenda</h1>\r\n                <form\r\n                    id=\"to-do-list\"\r\n                    className=\"center\"\r\n                    onSubmit={this.onSubmitSignUp}\r\n                >\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your Email Id\"\r\n                        required\r\n                        name=\"email\"\r\n                        value={this.state.signUpEmail}\r\n                        onChange={this.handleEmail}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        required\r\n                        name=\"password\"\r\n                        value={this.state.signUpPassword}\r\n                        onChange={this.handlePassword}\r\n                    />\r\n                    <br />\r\n                    <button style={{ margin: \"20px\" }} type=\"submit\">\r\n                        Sign Up\r\n                    </button>\r\n                </form>\r\n                <p className=\"center\">\r\n                    Already have an account?Click here\r\n                    <span\r\n                        className=\"link pointer underline dim\"\r\n                        onClick={() => onRouteChange(\"signin\")}\r\n                    >\r\n                        Sign In\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default signup;\r\n","import React from \"react\";\r\nimport \"./Todo.css\";\r\n\r\nclass signin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: \"\",\r\n            signInPassword: \"\",\r\n        };\r\n    }\r\n    handleEmail = (e) => {\r\n        this.setState({ signInEmail: e.target.value });\r\n    };\r\n    handlePassword = (e) => {\r\n        this.setState({ signInPassword: e.target.value });\r\n    };\r\n    onSubmitSignIn = (e) => {\r\n        e.preventDefault();\r\n        fetch(\"https://todoapp1000.herokuapp.com/signin\", {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                username: this.state.signInEmail,\r\n                password: this.state.signInPassword,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                if(res.id)\r\n                {\r\n                this.props.loadUser(res.id);\r\n                this.props.onRouteChange(\"home\");\r\n                }\r\n                else\r\n                {\r\n                 alert(\"Wrong username or password\");\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <div className=\"Todo\">\r\n                <h1>Agenda</h1>\r\n                <form\r\n                    id=\"to-do-list\"\r\n                    className=\"center\"\r\n                    onSubmit={this.onSubmitSignIn}\r\n                >\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your Email Id\"\r\n                        required\r\n                        name=\"email\"\r\n                        value={this.state.signInEmail}\r\n                        onChange={this.handleEmail}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        required\r\n                        name=\"password\"\r\n                        value={this.state.signInPassword}\r\n                        onChange={this.handlePassword}\r\n                    />\r\n                    <br />\r\n                    <button style={{ margin: \"20px\" }} type=\"submit\">\r\n                        Sign In\r\n                    </button>\r\n                </form>\r\n                <p className=\"center\">\r\n                    Do not have an account?Click here\r\n                    <span\r\n                        className=\"link pointer underline dim\"\r\n                        onClick={() => onRouteChange(\"signup\")}\r\n                    >\r\n                        Sign Up\r\n                    </span>\r\n                </p>\r\n                <p className=\"center link pointer underline dim\" style={{color:\"blue\"}} onClick={() => onRouteChange(\"resetPassword\")}>\r\n                    Forgot Password?\r\n                </p>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default signin;\r\n","import React from \"react\";\r\nimport \"./Todo.css\";\r\nclass resetPassword extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            passwordReset: \"\",\r\n        };\r\n    }\r\n    handleEmail = (e) => {\r\n        this.setState({ email: e.target.value });\r\n    };\r\n    handlePassword = (e) => {\r\n        this.setState({ passwordReset: e.target.value });\r\n    };\r\n    onSubmitReset = (e) => {\r\n        e.preventDefault();\r\n        fetch(\"https://todoapp1000.herokuapp.com/resetPassword\", {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                username: this.state.email,\r\n                password: this.state.passwordReset,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((res) => {\r\n                alert(res.message);\r\n                this.props.onRouteChange(\"signin\");\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"Todo\">\r\n                <h1>Reset Password</h1>\r\n                <form\r\n                    id=\"to-do-list\"\r\n                    className=\"center\"\r\n                    onSubmit={this.onSubmitReset}\r\n                >\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your Email Id\"\r\n                        required\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleEmail}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter new password\"\r\n                        required\r\n                        name=\"password\"\r\n                        value={this.state.passwordReset}\r\n                        onChange={this.handlePassword}\r\n                    />\r\n                    <br />\r\n                    <button style={{ margin: \"20px\" }} type=\"submit\">\r\n                        Reset\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default resetPassword;\r\n","import React from 'react';\r\nimport './Todo.css';\r\nconst Navigation=({onRouteChange,isSignedIn})=>{\r\n\t\r\n\tif(isSignedIn)\r\n\t{\r\n\treturn(\t\r\n\t<nav style={{display:'flex',justifyContent:'flex-end'}}>\r\n\t   <button id=\"navigation\"  onClick={()=>onRouteChange(\"signout\")}>Sign Out</button>\r\n\t</nav>\r\n\t);\r\n    }\r\n    else{\r\n    \treturn(\r\n\t<nav></nav>\r\n\t);\r\n    }\r\n\r\n\t\r\n}\r\nexport default Navigation;","import React from \"react\";\nimport Todo from \"./Component/Todo.js\";\nimport Signup from \"./Component/Signup.js\";\nimport Signin from \"./Component/Signin.js\";\nimport ResetPassword from \"./Component/ResetPassword.js\";\nimport Navigation from \"./Component/Navigation.js\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            route: \"signin\",\n            isSignedIn: false,\n            user: {\n                id: \"\",\n                email: \"\",\n                password: \"\",\n            },\n        };\n    }\n\n    loadUser = (user_id) => {\n        this.setState({\n            user: {\n                id: user_id,\n            },\n        });\n    };\n    onRouteChange = (route) => {\n        if (route === \"signout\") {\n            fetch(\"https://todoapp1000.herokuapp.com/signout\", {\n                method: \"post\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    id: this.state.user.id,\n                }),\n            })\n                .then((res) => res.json())\n                .catch((err) => console.log(err));\n\n            this.setState({\n                route: \"signin\",\n                isSignedIn: false,\n                user: {\n                    id: \"\",\n                    email: \"\",\n                    password: \"\",\n                },\n            });\n\n        } \n        else if (route === \"home\") {\n            this.setState({ \n                route:route,\n                isSignedIn: true \n            });\n        }\n        else if(route===\"signup\")\n        {\n            this.setState({ route: route });\n        }\n        else if(route===\"signin\")\n        {\n            this.setState({ route: route }); \n        }\n        else if(route===\"resetPassword\")\n        {\n            this.setState({ route: route }); \n        }\n    };\n    render() {\n        const { isSignedIn, route } = this.state;\n        return (\n            <div>\n                <Navigation\n                    isSignedIn={isSignedIn}\n                    onRouteChange={this.onRouteChange}\n                />\n                {route === \"home\" ? (\n                    <div>\n                        <Todo id={this.state.user.id} />\n                    </div>\n                ) : route === \"signin\" ? (\n                    <Signin\n                        loadUser={this.loadUser}\n                        onRouteChange={this.onRouteChange}\n                    />\n                ) : route===\"signup\" ? (\n                    <Signup\n                        loadUser={this.loadUser}\n                        onRouteChange={this.onRouteChange}\n                    />\n                ) : (\n                    <ResetPassword\n                        onRouteChange={this.onRouteChange}\n                    /> \n                )}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App name={`Bhaswati`}/>,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}